@model Presentation_UI_.ViewModels.ProjectViewModel

@{
    ViewData["Title"] = "PROJEKT 101 - SKAPA NYTT";
}

<div class="container mt-5">
    <h2 class="mb-4">PROJEKT 101 - SKAPA NYTT</h2>

    <form method="post" asp-action="Save">

        <!-- 📌 SECTION 1: PROJEKTINFO -->
        <div class="border p-3 mb-4">
            <h4 class="mb-3">Projektinfo</h4>
            <div class="row g-3">
                <div class="col-md-3">
                    <label class="form-label">Projektnr</label>
                    <input type="text" class="form-control" asp-for="ProjectNumber" readonly>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Benämning</label>
                    <input type="text" class="form-control" asp-for="Description" required>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Startdatum</label>
                    <input type="date" class="form-control" asp-for="StartDate" required>
                    <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label class="form-label">Slutdatum</label>
                    <input type="date" class="form-control" asp-for="EndDate">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Status</label>
                    <select class="form-select" asp-for="Status">
                        <option value="Pågår" selected="@((Model.Status == "Pågår") ? "selected" : "")">Pågår</option>
                        <option value="Avslutat" selected="@((Model.Status == "Avslutat") ? "selected" : "")">Avslutat</option>
                        <option value="Planerat" selected="@((Model.Status == "Planerat") ? "selected" : "")">Planerat</option>
                    </select>

                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Projektledare</label>
                    <select class="form-select" asp-for="ProjectLeaderID" asp-items="@(new SelectList(Model.ProjectLeaders, "ProjectLeaderID", "Name"))"></select>
                    <span asp-validation-for="ProjectLeaderID" class="text-danger"></span>
                </div>
            </div>
        </div>



        <!-- 📌 SECTION 2: BESTÄLLNING -->
        <div class="border p-3 mb-4">
            <div class="d-flex justify-content-between align-items-center">
                <h4 class="mb-3">Beställningar</h4>
                <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#createOrderModal">Skapa ny beställning</button>
            </div>

            <!-- Lista över beställningar -->
            <ul class="list-group mt-3" id="orderList">
                @foreach (var order in Model.Orders)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <div>
                            <strong>@order.ServiceName</strong> - @order.Hours timmar x @order.Price kr/timme =
                            <strong>@(order.Hours * order.Price) kr</strong>
                            <br><small>Kund: @order.CustomerName</small>
                        </div>
                        <button type="button" class="btn btn-danger btn-sm remove-order">Ta bort</button>
                    </li>
                }
            </ul>
        </div>

        <!-- Skapa Ny Beställning Modal -->
        <div class="modal fade" id="createOrderModal" tabindex="-1" aria-labelledby="createOrderModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="createOrderModalLabel">Skapa Ny Beställning</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <!-- Tjänst -->
                        <div class="mb-3">
                            <label class="form-label">Tjänst</label>
                            <select id="orderService" class="form-select">
                                @if (!Model.Orders.Any(o => o.Service != null))
                                {
                                    <option selected disabled>Don't exist any</option>
                                }
                                else
                                {
                                    @foreach (var service in Model.Orders.Select(o => o.Service).Distinct())
                                    {
                                        <option value="@service.ServiceID">@service.ServiceName</option>
                                    }
                                }
                            </select>
                            <span class="text-danger d-none" id="orderServiceError">Kontakta Admin</span>
                        </div>

                        <!-- Timmar -->
                        <div class="mb-3">
                            <label class="form-label">Timmar</label>
                            <input type="number" id="orderHours" class="form-control">
                            <span class="text-danger d-none" id="orderHoursError">Timmar måste vara ett positivt tal</span>
                        </div>

                        <!-- Pris per timme -->
                        <div class="mb-3">
                            <label class="form-label">Pris per timme</label>
                            <input type="number" id="orderPricePerHour" class="form-control">
                            <span class="text-danger d-none" id="orderPriceError">Pris måste vara ett positivt tal</span>
                        </div>

                        <!-- Kund -->
                        <div class="mb-3">
                            <label class="form-label">Kund</label>
                            <select id="orderCustomer" class="form-select">
                                @if (!Model.Orders.Any(o => o.Customer != null))
                                {
                                    <option selected disabled>Don't exist any</option>
                                }
                                else
                                {
                                    @foreach (var customer in Model.Orders.Select(o => o.Customer).Distinct())
                                    {
                                        <option value="@customer.CustomerID">@customer.CustomerName</option>
                                    }
                                }
                            </select>
                            <span class="text-danger d-none" id="orderCustomerError">Kontakta Admin</span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Avbryt</button>
                        <button type="button" id="saveOrder" class="btn btn-primary">Spara Beställning</button>
                    </div>
                </div>
            </div>
        </div>



        <!-- 📌 SECTION 3: SAMMANSTÄLLNING -->
        <div class="border p-3">
            <h4 class="mb-3">Sammanställning</h4>
            <div class="row g-3">
                <div class="col-md-3">
                    <label class="form-label">Totala Timmar</label>
                    <input type="number" id="totalHours" class="form-control" readonly>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Total Pris</label>
                    <input type="number" id="totalPrice" class="form-control" readonly>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Anteckningar</label>
                    <textarea class="form-control" asp-for="Summary.Notes"></textarea>
                </div>
            </div>
        </div>



        <div class="mt-4 d-flex justify-content-end gap-3">
            <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">Avbryt</a>
            <button type="submit" class="btn btn-success">Spara</button>
        </div>
    </form>
</div>

<!-- ✅ JavaScript Sektion: Hantera beställningar och sammanställning -->
<script>
    document.addEventListener("DOMContentLoaded", function () {

        function updateSummary() {
            let totalHours = 0;
            let totalPrice = 0;

            document.querySelectorAll("#orderList li").forEach(order => {
                const match = order.dataset.orderInfo.match(/(\d+\.\d{2}|\d+) timmar x (\d+\.\d{2}|\d+) kr\/timme = (\d+\.\d{2}|\d+) kr/);

                if (match) {
                    totalHours += parseFloat(match[1]);
                    totalPrice += parseFloat(match[3]);
                }
            });

            document.getElementById("totalHours").value = totalHours.toFixed(2);
            document.getElementById("totalPrice").value = totalPrice.toFixed(2);
        }

        function validateFields() {
            let isValid = true;

            const serviceSelect = document.getElementById("orderService");
            const customerSelect = document.getElementById("orderCustomer");
            const hoursInput = document.getElementById("orderHours");
            const priceInput = document.getElementById("orderPricePerHour");

            const service = serviceSelect.value;
            const customer = customerSelect.value;
            const hours = parseFloat(hoursInput.value.trim());
            const pricePerHour = parseFloat(priceInput.value.trim());

            if (!service || serviceSelect.options[serviceSelect.selectedIndex].text === "Don't exist any") {
                document.getElementById("orderServiceError").classList.remove("d-none");
                isValid = false;
            } else {
                document.getElementById("orderServiceError").classList.add("d-none");
            }

            if (!customer || customerSelect.options[customerSelect.selectedIndex].text === "Don't exist any") {
                document.getElementById("orderCustomerError").classList.remove("d-none");
                isValid = false;
            } else {
                document.getElementById("orderCustomerError").classList.add("d-none");
            }

            document.getElementById("orderHoursError").classList.toggle("d-none", !isNaN(hours) && hours > 0);
            document.getElementById("orderPriceError").classList.toggle("d-none", !isNaN(pricePerHour) && pricePerHour > 0);

            return isValid && !isNaN(hours) && hours > 0 && !isNaN(pricePerHour) && pricePerHour > 0;
        }

        document.getElementById("saveOrder").addEventListener("click", function () {
            if (!validateFields()) return;

            const serviceSelect = document.getElementById("orderService");
            const customerSelect = document.getElementById("orderCustomer");
            let hours = parseFloat(document.getElementById("orderHours").value.trim()).toFixed(2);
            let pricePerHour = parseFloat(document.getElementById("orderPricePerHour").value.trim()).toFixed(2);

            const totalPrice = (hours * pricePerHour).toFixed(2);
            const orderList = document.getElementById("orderList");

            const listItem = document.createElement("li");
            listItem.className = "list-group-item d-flex justify-content-between align-items-center";
            listItem.dataset.orderInfo = `${hours} timmar x ${pricePerHour} kr/timme = ${totalPrice} kr`;
            listItem.innerHTML = `
                <div><strong>${serviceSelect.options[serviceSelect.selectedIndex].text}</strong> - ${hours} timmar x ${pricePerHour} kr/timme =
                <strong>${totalPrice} kr</strong><br><small>Kund: ${customerSelect.options[customerSelect.selectedIndex].text}</small></div>
                <button type="button" class="btn btn-danger btn-sm remove-order">Ta bort</button>`;

            orderList.appendChild(listItem);
            updateSummary();

            bootstrap.Modal.getInstance(document.getElementById("createOrderModal"))?.hide();
        });

        document.getElementById("orderList").addEventListener("click", function (e) {
            if (e.target.classList.contains("remove-order")) {
                e.target.closest("li").remove();
                updateSummary();
            }
        });
    });

</script>
